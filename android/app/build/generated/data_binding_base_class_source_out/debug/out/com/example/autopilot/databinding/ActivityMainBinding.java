// Generated by view binder compiler. Do not edit!
package com.example.autopilot.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.autopilot.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnAddFindImage;

  @NonNull
  public final Button btnAddInputText;

  @NonNull
  public final Button btnAddScrollText;

  @NonNull
  public final Button btnAddSleep;

  @NonNull
  public final Button btnAddSwipe;

  @NonNull
  public final Button btnAddTemplateStep;

  @NonNull
  public final Button btnAddWait;

  @NonNull
  public final Button btnClear;

  @NonNull
  public final Button btnExport;

  @NonNull
  public final Button btnImport;

  @NonNull
  public final Button btnLaunch;

  @NonNull
  public final Button btnOpenAccessibility;

  @NonNull
  public final Button btnPickApp;

  @NonNull
  public final Button btnPickTemplate;

  @NonNull
  public final Button btnPlay;

  @NonNull
  public final Button btnRecord;

  @NonNull
  public final Button btnStep;

  @NonNull
  public final Button btnViewSteps;

  @NonNull
  public final CheckBox chkAutoPlay;

  @NonNull
  public final CheckBox chkRepeat;

  @NonNull
  public final CheckBox chkScrollDown;

  @NonNull
  public final EditText edtImageLabel;

  @NonNull
  public final EditText edtInputText;

  @NonNull
  public final EditText edtPackage;

  @NonNull
  public final EditText edtRepeatCount;

  @NonNull
  public final EditText edtRepeatDelay;

  @NonNull
  public final EditText edtScrollMax;

  @NonNull
  public final EditText edtScrollText;

  @NonNull
  public final EditText edtSleepMs;

  @NonNull
  public final EditText edtSwipeDur;

  @NonNull
  public final EditText edtSwipeXY1;

  @NonNull
  public final EditText edtSwipeXY2;

  @NonNull
  public final EditText edtTemplateThreshold;

  @NonNull
  public final EditText edtWaitText;

  @NonNull
  public final EditText edtWaitTimeout;

  @NonNull
  public final TextView txtStatus;

  private ActivityMainBinding(@NonNull LinearLayout rootView, @NonNull Button btnAddFindImage,
      @NonNull Button btnAddInputText, @NonNull Button btnAddScrollText,
      @NonNull Button btnAddSleep, @NonNull Button btnAddSwipe, @NonNull Button btnAddTemplateStep,
      @NonNull Button btnAddWait, @NonNull Button btnClear, @NonNull Button btnExport,
      @NonNull Button btnImport, @NonNull Button btnLaunch, @NonNull Button btnOpenAccessibility,
      @NonNull Button btnPickApp, @NonNull Button btnPickTemplate, @NonNull Button btnPlay,
      @NonNull Button btnRecord, @NonNull Button btnStep, @NonNull Button btnViewSteps,
      @NonNull CheckBox chkAutoPlay, @NonNull CheckBox chkRepeat, @NonNull CheckBox chkScrollDown,
      @NonNull EditText edtImageLabel, @NonNull EditText edtInputText, @NonNull EditText edtPackage,
      @NonNull EditText edtRepeatCount, @NonNull EditText edtRepeatDelay,
      @NonNull EditText edtScrollMax, @NonNull EditText edtScrollText, @NonNull EditText edtSleepMs,
      @NonNull EditText edtSwipeDur, @NonNull EditText edtSwipeXY1, @NonNull EditText edtSwipeXY2,
      @NonNull EditText edtTemplateThreshold, @NonNull EditText edtWaitText,
      @NonNull EditText edtWaitTimeout, @NonNull TextView txtStatus) {
    this.rootView = rootView;
    this.btnAddFindImage = btnAddFindImage;
    this.btnAddInputText = btnAddInputText;
    this.btnAddScrollText = btnAddScrollText;
    this.btnAddSleep = btnAddSleep;
    this.btnAddSwipe = btnAddSwipe;
    this.btnAddTemplateStep = btnAddTemplateStep;
    this.btnAddWait = btnAddWait;
    this.btnClear = btnClear;
    this.btnExport = btnExport;
    this.btnImport = btnImport;
    this.btnLaunch = btnLaunch;
    this.btnOpenAccessibility = btnOpenAccessibility;
    this.btnPickApp = btnPickApp;
    this.btnPickTemplate = btnPickTemplate;
    this.btnPlay = btnPlay;
    this.btnRecord = btnRecord;
    this.btnStep = btnStep;
    this.btnViewSteps = btnViewSteps;
    this.chkAutoPlay = chkAutoPlay;
    this.chkRepeat = chkRepeat;
    this.chkScrollDown = chkScrollDown;
    this.edtImageLabel = edtImageLabel;
    this.edtInputText = edtInputText;
    this.edtPackage = edtPackage;
    this.edtRepeatCount = edtRepeatCount;
    this.edtRepeatDelay = edtRepeatDelay;
    this.edtScrollMax = edtScrollMax;
    this.edtScrollText = edtScrollText;
    this.edtSleepMs = edtSleepMs;
    this.edtSwipeDur = edtSwipeDur;
    this.edtSwipeXY1 = edtSwipeXY1;
    this.edtSwipeXY2 = edtSwipeXY2;
    this.edtTemplateThreshold = edtTemplateThreshold;
    this.edtWaitText = edtWaitText;
    this.edtWaitTimeout = edtWaitTimeout;
    this.txtStatus = txtStatus;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAddFindImage;
      Button btnAddFindImage = ViewBindings.findChildViewById(rootView, id);
      if (btnAddFindImage == null) {
        break missingId;
      }

      id = R.id.btnAddInputText;
      Button btnAddInputText = ViewBindings.findChildViewById(rootView, id);
      if (btnAddInputText == null) {
        break missingId;
      }

      id = R.id.btnAddScrollText;
      Button btnAddScrollText = ViewBindings.findChildViewById(rootView, id);
      if (btnAddScrollText == null) {
        break missingId;
      }

      id = R.id.btnAddSleep;
      Button btnAddSleep = ViewBindings.findChildViewById(rootView, id);
      if (btnAddSleep == null) {
        break missingId;
      }

      id = R.id.btnAddSwipe;
      Button btnAddSwipe = ViewBindings.findChildViewById(rootView, id);
      if (btnAddSwipe == null) {
        break missingId;
      }

      id = R.id.btnAddTemplateStep;
      Button btnAddTemplateStep = ViewBindings.findChildViewById(rootView, id);
      if (btnAddTemplateStep == null) {
        break missingId;
      }

      id = R.id.btnAddWait;
      Button btnAddWait = ViewBindings.findChildViewById(rootView, id);
      if (btnAddWait == null) {
        break missingId;
      }

      id = R.id.btnClear;
      Button btnClear = ViewBindings.findChildViewById(rootView, id);
      if (btnClear == null) {
        break missingId;
      }

      id = R.id.btnExport;
      Button btnExport = ViewBindings.findChildViewById(rootView, id);
      if (btnExport == null) {
        break missingId;
      }

      id = R.id.btnImport;
      Button btnImport = ViewBindings.findChildViewById(rootView, id);
      if (btnImport == null) {
        break missingId;
      }

      id = R.id.btnLaunch;
      Button btnLaunch = ViewBindings.findChildViewById(rootView, id);
      if (btnLaunch == null) {
        break missingId;
      }

      id = R.id.btnOpenAccessibility;
      Button btnOpenAccessibility = ViewBindings.findChildViewById(rootView, id);
      if (btnOpenAccessibility == null) {
        break missingId;
      }

      id = R.id.btnPickApp;
      Button btnPickApp = ViewBindings.findChildViewById(rootView, id);
      if (btnPickApp == null) {
        break missingId;
      }

      id = R.id.btnPickTemplate;
      Button btnPickTemplate = ViewBindings.findChildViewById(rootView, id);
      if (btnPickTemplate == null) {
        break missingId;
      }

      id = R.id.btnPlay;
      Button btnPlay = ViewBindings.findChildViewById(rootView, id);
      if (btnPlay == null) {
        break missingId;
      }

      id = R.id.btnRecord;
      Button btnRecord = ViewBindings.findChildViewById(rootView, id);
      if (btnRecord == null) {
        break missingId;
      }

      id = R.id.btnStep;
      Button btnStep = ViewBindings.findChildViewById(rootView, id);
      if (btnStep == null) {
        break missingId;
      }

      id = R.id.btnViewSteps;
      Button btnViewSteps = ViewBindings.findChildViewById(rootView, id);
      if (btnViewSteps == null) {
        break missingId;
      }

      id = R.id.chkAutoPlay;
      CheckBox chkAutoPlay = ViewBindings.findChildViewById(rootView, id);
      if (chkAutoPlay == null) {
        break missingId;
      }

      id = R.id.chkRepeat;
      CheckBox chkRepeat = ViewBindings.findChildViewById(rootView, id);
      if (chkRepeat == null) {
        break missingId;
      }

      id = R.id.chkScrollDown;
      CheckBox chkScrollDown = ViewBindings.findChildViewById(rootView, id);
      if (chkScrollDown == null) {
        break missingId;
      }

      id = R.id.edtImageLabel;
      EditText edtImageLabel = ViewBindings.findChildViewById(rootView, id);
      if (edtImageLabel == null) {
        break missingId;
      }

      id = R.id.edtInputText;
      EditText edtInputText = ViewBindings.findChildViewById(rootView, id);
      if (edtInputText == null) {
        break missingId;
      }

      id = R.id.edtPackage;
      EditText edtPackage = ViewBindings.findChildViewById(rootView, id);
      if (edtPackage == null) {
        break missingId;
      }

      id = R.id.edtRepeatCount;
      EditText edtRepeatCount = ViewBindings.findChildViewById(rootView, id);
      if (edtRepeatCount == null) {
        break missingId;
      }

      id = R.id.edtRepeatDelay;
      EditText edtRepeatDelay = ViewBindings.findChildViewById(rootView, id);
      if (edtRepeatDelay == null) {
        break missingId;
      }

      id = R.id.edtScrollMax;
      EditText edtScrollMax = ViewBindings.findChildViewById(rootView, id);
      if (edtScrollMax == null) {
        break missingId;
      }

      id = R.id.edtScrollText;
      EditText edtScrollText = ViewBindings.findChildViewById(rootView, id);
      if (edtScrollText == null) {
        break missingId;
      }

      id = R.id.edtSleepMs;
      EditText edtSleepMs = ViewBindings.findChildViewById(rootView, id);
      if (edtSleepMs == null) {
        break missingId;
      }

      id = R.id.edtSwipeDur;
      EditText edtSwipeDur = ViewBindings.findChildViewById(rootView, id);
      if (edtSwipeDur == null) {
        break missingId;
      }

      id = R.id.edtSwipeXY1;
      EditText edtSwipeXY1 = ViewBindings.findChildViewById(rootView, id);
      if (edtSwipeXY1 == null) {
        break missingId;
      }

      id = R.id.edtSwipeXY2;
      EditText edtSwipeXY2 = ViewBindings.findChildViewById(rootView, id);
      if (edtSwipeXY2 == null) {
        break missingId;
      }

      id = R.id.edtTemplateThreshold;
      EditText edtTemplateThreshold = ViewBindings.findChildViewById(rootView, id);
      if (edtTemplateThreshold == null) {
        break missingId;
      }

      id = R.id.edtWaitText;
      EditText edtWaitText = ViewBindings.findChildViewById(rootView, id);
      if (edtWaitText == null) {
        break missingId;
      }

      id = R.id.edtWaitTimeout;
      EditText edtWaitTimeout = ViewBindings.findChildViewById(rootView, id);
      if (edtWaitTimeout == null) {
        break missingId;
      }

      id = R.id.txtStatus;
      TextView txtStatus = ViewBindings.findChildViewById(rootView, id);
      if (txtStatus == null) {
        break missingId;
      }

      return new ActivityMainBinding((LinearLayout) rootView, btnAddFindImage, btnAddInputText,
          btnAddScrollText, btnAddSleep, btnAddSwipe, btnAddTemplateStep, btnAddWait, btnClear,
          btnExport, btnImport, btnLaunch, btnOpenAccessibility, btnPickApp, btnPickTemplate,
          btnPlay, btnRecord, btnStep, btnViewSteps, chkAutoPlay, chkRepeat, chkScrollDown,
          edtImageLabel, edtInputText, edtPackage, edtRepeatCount, edtRepeatDelay, edtScrollMax,
          edtScrollText, edtSleepMs, edtSwipeDur, edtSwipeXY1, edtSwipeXY2, edtTemplateThreshold,
          edtWaitText, edtWaitTimeout, txtStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
